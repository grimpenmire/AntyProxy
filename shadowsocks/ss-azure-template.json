{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "2.0.0.0",
	"parameters": {
	  "shadowsocksToken": {
		"minLength": 32,
		"maxLength": 32,
		"type": "String",
		"metadata": {
		  "description": "Please provide the token for the shadowsocks."
		}
	  },
	  "adminUsername": {
		"type": "String",
		"metadata": {
		  "description": "Please provide a username for the Virtual Machine."
		}
	  },
	  "adminPassword": {
		"type": "SecureString",
		"metadata": {
		  "description": "Please provide a secure password for the Virtual Machine. (at least 15 charachter)"
		}
	  },
	  "dnsNameForPublicIP": {
		"type": "String",
		"metadata": {
		  "description": "Unique DNS Name (more than 5 charachters) for the Public IP used to access the Virtual Machine easily."
		}
	  }
	},
	"variables": {
	  "storageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
	  "domain": "[concat(parameters('dnsNameForPublicIP'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
	  "imagePublisher": "Canonical",
	  "imageOffer": "0001-com-ubuntu-server-focal",
	  "OSDiskName": "shadowsocks-vhd",
	  "imageSKU": "20_04-lts-gen2",
	  "nicName": "shadowsocksNic",
	  "addressPrefix": "10.0.0.0/16",
	  "subnetName": "shadowsocks_subnet",
	  "subnetPrefix": "10.0.0.0/24",
	  "storageAccountType": "Standard_LRS",
	  "publicIPAddressName": "shadowsocksPublicIP",
	  "publicIPAddressType": "Dynamic",
	  "vmStorageAccountContainerName": "vhds",
	  "vmName": "shadowsocksVM",
	  "vmSize": "Standard_B1ls",
	  "virtualNetworkName": "shadowsocksVNET",
	  "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
	  "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
	  "apiVersion": "2015-06-15"
	},
	"resources": [
	  {
		"type": "Microsoft.Storage/storageAccounts",
		"apiVersion": "[variables('apiVersion')]",
		"name": "[variables('storageAccountName')]",
		"location": "[resourceGroup().location]",
		"properties": {
		  "accountType": "[variables('storageAccountType')]"
		}
	  },
	  {
		"type": "Microsoft.Network/publicIPAddresses",
		"apiVersion": "[variables('apiVersion')]",
		"name": "[variables('publicIPAddressName')]",
		"location": "[resourceGroup().location]",
		"properties": {
		  "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
		  "dnsSettings": {
			"domainNameLabel": "[parameters('dnsNameForPublicIP')]"
		  }
		}
	  },
	  {
		"type": "Microsoft.Network/virtualNetworks",
		"apiVersion": "[variables('apiVersion')]",
		"name": "[variables('virtualNetworkName')]",
		"location": "[resourceGroup().location]",
		"properties": {
		  "addressSpace": {
			"addressPrefixes": [
			  "[variables('addressPrefix')]"
			]
		  },
		  "subnets": [
			{
			  "name": "[variables('subnetName')]",
			  "properties": {
				"addressPrefix": "[variables('subnetPrefix')]"
			  }
			}
		  ]
		}
	  },
	  {
		"type": "Microsoft.Network/networkInterfaces",
		"apiVersion": "[variables('apiVersion')]",
		"name": "[variables('nicName')]",
		"location": "[resourceGroup().location]",
		"dependsOn": [
		  "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
		  "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
		  "[concat('Microsoft.Network/networkSecurityGroups/', 'shadowsocks-nsg')]"
		],
		"properties": {
		  "ipConfigurations": [
			{
			  "name": "ipconfig1",
			  "properties": {
				"privateIPAllocationMethod": "Dynamic",
				"publicIPAddress": {
				  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
				  "properties": {
					"deleteOption": "Delete"
				  }
				},
				"subnet": {
				  "id": "[variables('subnetRef')]"
				}
			  }
			}
		  ]
		}
	  },
	  {
		"type": "Microsoft.Network/networkSecurityGroups",
		"apiVersion": "2016-09-01",
		"name": "['shadowsocks-nsg']",
		"location": "[resourceGroup().location]",
		"properties": {
		  "securityRules": [
			{
			  "name": "default-allow-ssh",
			  "properties": {
				"priority": 1000,
				"sourceAddressPrefix": "*",
				"protocol": "TCP",
				"destinationPortRange": "22",
				"access": "Allow",
				"direction": "Inbound",
				"sourcePortRange": "*",
				"destinationAddressPrefix": "*"
			  }
			},
			{
			  "name": "default-allow-444",
			  "properties": {
				"priority": 1100,
				"sourceAddressPrefix": "*",
				"protocol": "TCP",
				"destinationPortRange": "444",
				"access": "Allow",
				"direction": "Inbound",
				"sourcePortRange": "*",
				"destinationAddressPrefix": "*"
			  }
			},
			{
			  "name": "default-allow-443-UDP",
			  "properties": {
				"priority": 1300,
				"sourceAddressPrefix": "*",
				"protocol": "UDP",
				"destinationPortRange": "443",
				"access": "Allow",
				"direction": "Inbound",
				"sourcePortRange": "*",
				"destinationAddressPrefix": "*"
			  }
			},
			{
			  "name": "default-allow-https",
			  "properties": {
				"priority": 1200,
				"sourceAddressPrefix": "*",
				"protocol": "TCP",
				"destinationPortRange": "443",
				"access": "Allow",
				"direction": "Inbound",
				"sourcePortRange": "*",
				"destinationAddressPrefix": "*"
			  }
			},
			{
			  "name": "default-allow-http",
			  "properties": {
				"priority": 1400,
				"sourceAddressPrefix": "*",
				"protocol": "TCP",
				"destinationPortRange": "80",
				"access": "Allow",
				"direction": "Inbound",
				"sourcePortRange": "*",
				"destinationAddressPrefix": "*"
			  }
			}
		  ]
		}
	  },
	  {
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"apiVersion": "['2015-06-15']",
		"name": "[concat(variables('vmName'),'/', 'shadowsocks-setup')]",
		"location": "[resourceGroup().location]",
		"dependsOn": [
		  "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
		],
		"properties": {
		  "publisher": "Microsoft.Azure.Extensions",
		  "type": "CustomScript",
		  "typeHandlerVersion": "2.1",
		  "autoUpgradeMinorVersion": true,
		  "settings": {
			"fileUris": ["https://raw.githubusercontent.com/Antyfilter/AntyProxy/main/common/download_install.sh",
								 "https://raw.githubusercontent.com/Antyfilter/AntyProxy/main/config.env"],
			"commandToExecute": "[concat('source config.env; bash install.sh ', parameters('shadowsocksToken'), ' ', variables('domain'), ' shadowsocks')]"
		  }
		}
	  },
	  {
		"type": "Microsoft.Compute/virtualMachines",
		"apiVersion": "2022-03-01",
		"name": "[variables('vmName')]",
		"location": "[resourceGroup().location]",
		"dependsOn": [
		  "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
		  "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
		],
		"properties": {
		  "hardwareProfile": {
			"vmSize": "[variables('vmSize')]"
		  },
		  "osProfile": {
			"computerName": "[variables('vmName')]",
			"adminUsername": "[parameters('adminUsername')]",
			"adminPassword": "[parameters('adminPassword')]"
		  },
		  "storageProfile": {
			"imageReference": {
			  "publisher": "[variables('imagePublisher')]",
			  "offer": "[variables('imageOffer')]",
			  "sku": "[variables('imageSKU')]",
			  "version": "latest"
			},
			"osDisk": {
			  "createOption": "fromImage",
			  "managedDisk": {
				"storageAccountType": "[variables('storageAccountType')]"
			  },
			  "deleteOption": "Delete"
			}
		  },
		  "networkProfile": {
			"networkInterfaces": [
			  {
				"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
			  }
			]
		  },
		  "diagnosticsProfile": {
			"bootDiagnostics": {
			  "enabled": "true",
			  "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), variables('apiVersion')).primaryEndpoints.blob)]"
			}
		  }
		}
	  }
	],
	"outputs": {
	  "httpSite": {
		"type": "String",
		"value": "[concat('https://', variables('domain'),'/', parameters('shadowsocksToken'),'/')]"
	  }
	}
  }
